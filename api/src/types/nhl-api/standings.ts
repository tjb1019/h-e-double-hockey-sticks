import { z } from 'zod';

export const StandingsResponseSchema = z.object({
  wildCardIndicator: z.boolean(),
  standingsDateTimeUtc: z.string(),
  standings: z.array(
    z.object({
      conferenceAbbrev: z.string(),
      conferenceHomeSequence: z.number(),
      conferenceL10Sequence: z.number(),
      conferenceName: z.string(),
      conferenceRoadSequence: z.number(),
      conferenceSequence: z.number(),
      date: z.string(),
      divisionAbbrev: z.string(),
      divisionHomeSequence: z.number(),
      divisionL10Sequence: z.number(),
      divisionName: z.string(),
      divisionRoadSequence: z.number(),
      divisionSequence: z.number(),
      gameTypeId: z.number(),
      gamesPlayed: z.number(),
      goalDifferential: z.number(),
      goalDifferentialPctg: z.number(),
      goalAgainst: z.number(),
      goalFor: z.number(),
      goalsForPctg: z.number(),
      homeGamesPlayed: z.number(),
      homeGoalDifferential: z.number(),
      homeGoalsAgainst: z.number(),
      homeGoalsFor: z.number(),
      homeLosses: z.number(),
      homeOtLosses: z.number(),
      homePoints: z.number(),
      homeRegulationPlusOtWins: z.number(),
      homeRegulationWins: z.number(),
      homeTies: z.number(),
      homeWins: z.number(),
      l10GamesPlayed: z.number(),
      l10GoalDifferential: z.number(),
      l10GoalsAgainst: z.number(),
      l10GoalsFor: z.number(),
      l10Losses: z.number(),
      l10OtLosses: z.number(),
      l10Points: z.number(),
      l10RegulationPlusOtWins: z.number(),
      l10RegulationWins: z.number(),
      l10Ties: z.number(),
      l10Wins: z.number(),
      leagueHomeSequence: z.number(),
      leagueL10Sequence: z.number(),
      leagueRoadSequence: z.number(),
      leagueSequence: z.number(),
      losses: z.number(),
      otLosses: z.number(),
      placeName: z.object({ default: z.string() }),
      pointPctg: z.number(),
      points: z.number(),
      regulationPlusOtWinPctg: z.number(),
      regulationPlusOtWins: z.number(),
      regulationWinPctg: z.number(),
      regulationWins: z.number(),
      roadGamesPlayed: z.number(),
      roadGoalDifferential: z.number(),
      roadGoalsAgainst: z.number(),
      roadGoalsFor: z.number(),
      roadLosses: z.number(),
      roadOtLosses: z.number(),
      roadPoints: z.number(),
      roadRegulationPlusOtWins: z.number(),
      roadRegulationWins: z.number(),
      roadTies: z.number(),
      roadWins: z.number(),
      seasonId: z.number(),
      shootoutLosses: z.number(),
      shootoutWins: z.number(),
      streakCode: z.string(),
      streakCount: z.number(),
      teamName: z.object({ default: z.string(), fr: z.string() }),
      teamCommonName: z.object({ default: z.string() }),
      teamAbbrev: z.object({ default: z.string() }),
      teamLogo: z.string(),
      ties: z.number(),
      waiversSequence: z.number(),
      wildcardSequence: z.number(),
      winPctg: z.number(),
      wins: z.number(),
    })
  ),
});
export type StandingsResponse = z.infer<typeof StandingsResponseSchema>;

export const StandingSchema = StandingsResponseSchema.shape.standings;
export type Standing = z.infer<typeof StandingSchema.element>;
